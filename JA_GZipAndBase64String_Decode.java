// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package logging.actions;

import java.io.ByteArrayInputStream;
import java.net.URLDecoder;
import java.util.Base64;
import java.util.zip.GZIPInputStream;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class JA_GZipAndBase64String_Decode extends CustomJavaAction<java.lang.String>
{
	private final java.lang.String InputString;

	public JA_GZipAndBase64String_Decode(
		IContext context,
		java.lang.String _inputString
	)
	{
		super(context);
		this.InputString = _inputString;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
	 // decode Base64 string
	    String urlDecode = URLDecoder.decode(InputString, "UTF-8").replaceAll(" ", "+");
	    byte[] decodedBytes = Base64.getDecoder().decode(urlDecode.getBytes());

	    // create GZIP input stream
	    ByteArrayInputStream bis = new ByteArrayInputStream(decodedBytes);
	    GZIPInputStream gis = new GZIPInputStream(bis);

	    // read uncompressed data into a byte array
	    byte[] buffer = new byte[1024];
	    StringBuilder sb = new StringBuilder();
	    int length;
	    while ((length = gis.read(buffer)) != -1) {
	      sb.append(new String(buffer, 0, length));
	    }

	    // return the uncompressed string
	    return sb.toString();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_GZipAndBase64String_Decode";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
