// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package dbmaintenance.actions;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;

/**
 * FlowFabric B.V.
 */
public class JA_PerformSQLWithoutResult extends CustomJavaAction<java.lang.Boolean>
{
	private final java.lang.String sql;

	public JA_PerformSQLWithoutResult(
		IContext context,
		java.lang.String _sql
	)
	{
		super(context);
		this.sql = _sql;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		logger.debug("executeAction: " + this.sql);
		String kw_insert = "insert";
		String kw_update = "update";
		String kw_delete = "delete";
		String sql_lc = this.sql.toLowerCase();
		if(sql_lc.indexOf(kw_insert) != -1 ||sql_lc.indexOf(kw_update) != -1 || sql_lc.indexOf(kw_delete) != -1){
			throw new RuntimeException("Please do not try to insert, update or delete data with this method");
		}
		
		
        List<IMendixObject> result = new ArrayList<IMendixObject>();
        Core.dataStorage().executeWithConnection(connection ->
        {
            try {
                PreparedStatement stmt = connection.prepareStatement(this.sql);
                stmt.executeQuery();
    }
            catch (SQLException e) {
                                   
            }
			return result;
        });
    
    return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_PerformSQLWithoutResult";
	}

	// BEGIN EXTRA CODE
	private final ILogNode logger = Core.getLogger(this.getClass().getName());
	// END EXTRA CODE
}
